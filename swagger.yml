openapi: 3.0.0
info:
  title: jobs-api
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-e1002.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: lola
              email: lola@gamil.com
              password: love
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
            example:
              email: dupe@gamil.com
              password: wierd
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create jobs
      operationId: Createjobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatejobsRequest'
            example:
              company: Apple
              position: Product Designer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: Get all Jobs
      operationId: GetallJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
            type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get Job
      operationId: GetJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
            example:
              company: Apple
              position: UX Researcher
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: lola
        email: lola@gamil.com
        password: love
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: dupe@gamil.com
        password: wierd
    CreatejobsRequest:
      title: CreatejobsRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Apple
        position: Product Designer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Apple
        position: UX Researcher
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''